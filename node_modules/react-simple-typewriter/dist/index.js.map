{"version":3,"file":"index.js","sources":["../src/reducer.ts","../src/hooks/useTypewriter.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/components/Cursor.tsx","../src/components/Typewriter.tsx"],"sourcesContent":["export type State = {\r\n  speed: number\r\n  text: string\r\n  count: number\r\n}\r\n\r\nexport type Action =\r\n  | { type: 'DELAY'; payload: number }\r\n  | { type: 'TYPE'; payload: string; speed: number }\r\n  | { type: 'DELETE'; payload: string; speed: number }\r\n  | { type: 'COUNT' }\r\n\r\nexport function reducer(state: State, action: Action): State {\r\n  switch (action.type) {\r\n    case 'TYPE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length + 1)\r\n      }\r\n    case 'DELAY':\r\n      return {\r\n        ...state,\r\n        speed: action.payload\r\n      }\r\n    case 'DELETE':\r\n      return {\r\n        ...state,\r\n        speed: action.speed,\r\n        text: action.payload?.substring(0, state.text.length - 1)\r\n      }\r\n    case 'COUNT':\r\n      return {\r\n        ...state,\r\n        count: state.count + 1\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { useCallback, useEffect, useRef, useReducer } from 'react'\r\nimport { reducer } from '../reducer'\r\n\r\nexport type TypewriterProps = {\r\n  /** Callback Function that is triggered when loops are completed. available if loop is > `0` */\r\n  onLoopDone?: () => void\r\n  /** Callback Function that is triggered while typing with `typed` words count passed */\r\n  onType?: (count: number) => void\r\n  /** Callback Function that is triggered while deleting */\r\n  onDelete?: () => void\r\n  /** Callback Function that is triggered on typing delay */\r\n  onDelay?: () => void\r\n  /** Array of strings holding the words */\r\n  words: string[]\r\n  /** Control how many times to run. `0 | false` to run infinitely */\r\n  loop?: number | boolean\r\n  /** Character typing speed in Milliseconds */\r\n  typeSpeed?: number\r\n  /** Character deleting speed in Milliseconds */\r\n  deleteSpeed?: number\r\n  /** Delay time between the words in Milliseconds */\r\n  delaySpeed?: number\r\n}\r\n\r\nexport type TypewriterHelper = {\r\n  /** `true` if currently typing */\r\n  isType: boolean\r\n  /** `true` if on delay */\r\n  isDelay: boolean\r\n  /** `true` if currently deleting */\r\n  isDelete: boolean\r\n  /** `true` if all loops are done */\r\n  isDone: boolean\r\n}\r\n\r\nexport const useTypewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  onLoopDone,\r\n  onType,\r\n  onDelete,\r\n  onDelay\r\n}: TypewriterProps): [string, TypewriterHelper] => {\r\n  const [{ speed, text, count }, dispatch] = useReducer(reducer, {\r\n    speed: typeSpeed,\r\n    text: '',\r\n    count: 0\r\n  })\r\n\r\n  // Refs\r\n  const loops = useRef(0)\r\n  const isDone = useRef(false)\r\n  const isDelete = useRef(false)\r\n  const isType = useRef(false)\r\n  const isDelay = useRef(false)\r\n\r\n  const handleTyping = useCallback(() => {\r\n    const index = count % words.length\r\n    const fullWord = words[index]\r\n\r\n    if (!isDelete.current) {\r\n      dispatch({ type: 'TYPE', payload: fullWord, speed: typeSpeed })\r\n      isType.current = true\r\n\r\n      if (text === fullWord) {\r\n        dispatch({ type: 'DELAY', payload: delaySpeed })\r\n        isType.current = false\r\n        isDelay.current = true\r\n\r\n        setTimeout(() => {\r\n          isDelay.current = false\r\n          isDelete.current = true\r\n        }, delaySpeed)\r\n\r\n        if (loop > 0) {\r\n          loops.current += 1\r\n          if (loops.current / words.length === loop) {\r\n            isDelay.current = false\r\n            isDone.current = true\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      dispatch({ type: 'DELETE', payload: fullWord, speed: deleteSpeed })\r\n      if (text === '') {\r\n        isDelete.current = false\r\n        dispatch({ type: 'COUNT' })\r\n      }\r\n    }\r\n\r\n    if (isType.current) {\r\n      if (onType) onType(loops.current)\r\n    }\r\n\r\n    if (isDelete.current) {\r\n      if (onDelete) onDelete()\r\n    }\r\n\r\n    if (isDelay.current) {\r\n      if (onDelay) onDelay()\r\n    }\r\n  }, [\r\n    count,\r\n    delaySpeed,\r\n    deleteSpeed,\r\n    loop,\r\n    typeSpeed,\r\n    words,\r\n    text,\r\n    onType,\r\n    onDelete,\r\n    onDelay\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const typing = setTimeout(handleTyping, speed)\r\n\r\n    if (isDone.current) clearTimeout(typing)\r\n\r\n    return () => clearTimeout(typing)\r\n  }, [handleTyping, speed])\r\n\r\n  useEffect(() => {\r\n    if (!onLoopDone) return\r\n\r\n    if (isDone.current) {\r\n      onLoopDone()\r\n    }\r\n  }, [onLoopDone])\r\n\r\n  return [\r\n    text,\r\n    {\r\n      isType: isType.current,\r\n      isDelay: isDelay.current,\r\n      isDelete: isDelete.current,\r\n      isDone: isDone.current\r\n    }\r\n  ]\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { ReactNode, memo } from 'react'\r\nimport styles from '../styles.module.css'\r\n\r\nexport type CursorProps = {\r\n  /** Enable cursor blinking animation */\r\n  cursorBlinking?: boolean\r\n  /** Change cursor style */\r\n  cursorStyle?: ReactNode\r\n  /** Change cursor color */\r\n  cursorColor?: string\r\n}\r\n\r\nconst MemoizedCursor = ({\r\n  cursorBlinking = true,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit'\r\n}: CursorProps): JSX.Element => {\r\n  return (\r\n    <span\r\n      style={{ color: cursorColor }}\r\n      className={`${styles.blinkingCursor} ${\r\n        cursorBlinking ? styles.blinking : ''\r\n      }`}\r\n    >\r\n      {cursorStyle}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport const Cursor = memo(MemoizedCursor)\r\n","import { TypewriterProps, useTypewriter } from '../hooks/useTypewriter'\r\nimport { Cursor, CursorProps } from './Cursor'\r\n\r\ntype ComponentProps = {\r\n  /** Show / Hide the cursor */\r\n  cursor?: boolean\r\n} & TypewriterProps &\r\n  CursorProps\r\n\r\n/**\r\n * A Simple React Component for adding a nice Typewriter effect to your project.\r\n */\r\nexport const Typewriter = ({\r\n  words = ['Hello World!', 'This is', 'a simple Typewriter'],\r\n  loop = 1,\r\n  typeSpeed = 80,\r\n  deleteSpeed = 50,\r\n  delaySpeed = 1500,\r\n  cursor = false,\r\n  cursorStyle = '|',\r\n  cursorColor = 'inherit',\r\n  cursorBlinking = true,\r\n  onLoopDone,\r\n  onType,\r\n  onDelay,\r\n  onDelete\r\n}: ComponentProps): JSX.Element => {\r\n  const [text] = useTypewriter({\r\n    words,\r\n    loop,\r\n    typeSpeed,\r\n    deleteSpeed,\r\n    delaySpeed,\r\n    onLoopDone,\r\n    onType,\r\n    onDelay,\r\n    onDelete\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <span>{text}</span>\r\n      {cursor && (\r\n        <Cursor\r\n          cursorStyle={cursorStyle}\r\n          cursorColor={cursorColor}\r\n          cursorBlinking={cursorBlinking}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n"],"names":["reducer","state","action","type","__assign","speed","text","_a","payload","substring","length","_b","count","useTypewriter","words","_c","loop","_d","typeSpeed","_e","deleteSpeed","_f","delaySpeed","onLoopDone","onType","onDelete","onDelay","_g","useReducer","_h","dispatch","loops","useRef","isDone","isDelete","isType","isDelay","handleTyping","useCallback","index","fullWord","current","setTimeout","useEffect","typing","clearTimeout","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Cursor","memo","cursorBlinking","cursorStyle","cursorColor","_jsx","color","className","concat","styles","children","cursor","_j","_k","_jsxs","_Fragment"],"mappings":"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"}