{"ast":null,"code":"import React, { useRef, useEffect, memo } from 'react';\nasync function type(node) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  for (const arg of args) {\n    switch (typeof arg) {\n      case 'string':\n        await edit(node, arg);\n        break;\n      case 'number':\n        await wait(arg);\n        break;\n      case 'function':\n        await arg(node, ...args);\n        break;\n      default:\n        await arg;\n    }\n  }\n}\nasync function edit(node, text) {\n  const overlap = getOverlap(node.textContent, text);\n  await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}\nasync function wait(ms) {\n  await new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function perform(node, edits) {\n  let speed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60;\n  for (const op of editor(edits)) {\n    op(node);\n    await wait(speed + speed * (Math.random() - 0.5));\n  }\n}\nfunction* editor(edits) {\n  for (const edit of edits) {\n    yield node => requestAnimationFrame(() => node.textContent = edit);\n  }\n}\nfunction writer(_ref2) {\n  let [...text] = _ref2;\n  let startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let endIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : text.length;\n  return function* () {\n    while (startIndex < endIndex) {\n      yield text.slice(0, ++startIndex).join('');\n    }\n  }();\n}\nfunction deleter(_ref3) {\n  let [...text] = _ref3;\n  let startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let endIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : text.length;\n  return function* () {\n    while (endIndex > startIndex) {\n      yield text.slice(0, --endIndex).join('');\n    }\n  }();\n}\nfunction getOverlap(start, _ref4) {\n  let [...end] = _ref4;\n  return [...start, NaN].findIndex((char, i) => end[i] !== char);\n}\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\nvar css = \".styles_typicalWrapper__1_Uvh::after {\\n  content: \\\"|\\\";\\n  animation: styles_blink__2CKyC 1s infinite step-start;\\n}\\n\\n@keyframes styles_blink__2CKyC {\\n  50% { opacity: 0; }\\n}\";\nvar styles = {\n  \"typicalWrapper\": \"styles_typicalWrapper__1_Uvh\",\n  \"blink\": \"styles_blink__2CKyC\"\n};\nstyleInject(css);\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\nvar Typical = function Typical(_ref) {\n  var steps = _ref.steps,\n    loop = _ref.loop,\n    className = _ref.className,\n    _ref$wrapper = _ref.wrapper,\n    wrapper = _ref$wrapper === undefined ? \"p\" : _ref$wrapper;\n  var typicalRef = useRef(null);\n  var Component = wrapper;\n  var classNames = [styles.typicalWrapper];\n  if (className) {\n    classNames.unshift(className);\n  }\n  useEffect(function () {\n    if (loop === Infinity) {\n      type.apply(undefined, [typicalRef.current].concat(toConsumableArray(steps), [type]));\n    } else if (typeof loop === \"number\") {\n      type.apply(undefined, [typicalRef.current].concat(toConsumableArray(Array(loop).fill(steps).flat())));\n    } else {\n      type.apply(undefined, [typicalRef.current].concat(toConsumableArray(steps)));\n    }\n  });\n  return React.createElement(Component, {\n    ref: typicalRef,\n    className: classNames.join(' ')\n  });\n};\nvar index = memo(Typical);\nexport default index;","map":{"version":3,"mappings":"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","names":["type","node","args","arg","edit","wait","text","overlap","getOverlap","textContent","perform","deleter","writer","ms","Promise","resolve","setTimeout","edits","speed","op","editor","Math","random","requestAnimationFrame","startIndex","endIndex","length","slice","join","start","end","NaN","findIndex","char","i","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Typical","steps","loop","className","wrapper","typicalRef","useRef","Component","classNames","styles","typicalWrapper","unshift","Infinity","current","loopedType","Array","fill","flat","React","memo"],"sources":["/Users/shehabwaleed/Development/ReactTraining/mpw1/node_modules/react-typical/node_modules/@camwiegert/typical/typical.js","/Users/shehabwaleed/Development/ReactTraining/mpw1/node_modules/react-typical/node_modules/style-inject/dist/style-inject.es.js","/Users/shehabwaleed/Development/ReactTraining/mpw1/node_modules/react-typical/src/index.js"],"sourcesContent":["export async function type(node, ...args) {\n    for (const arg of args) {\n        switch (typeof arg) {\n            case 'string':\n                await edit(node, arg);\n                break;\n            case 'number':\n                await wait(arg);\n                break;\n            case 'function':\n                await arg(node, ...args);\n                break;\n            default:\n                await arg;\n        }\n    }\n}\n\nasync function edit(node, text) {\n    const overlap = getOverlap(node.textContent, text);\n    await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}\n\nasync function wait(ms) {\n    await new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function perform(node, edits, speed = 60) {\n    for (const op of editor(edits)) {\n        op(node);\n        await wait(speed + speed * (Math.random() - 0.5));\n    }\n}\n\nexport function* editor(edits) {\n    for (const edit of edits) {\n        yield (node) => requestAnimationFrame(() => node.textContent = edit);\n    }\n}\n\nexport function* writer([...text], startIndex = 0, endIndex = text.length) {\n    while (startIndex < endIndex) {\n        yield text.slice(0, ++startIndex).join('');\n    }\n}\n\nexport function* deleter([...text], startIndex = 0, endIndex = text.length) {\n    while (endIndex > startIndex) {\n        yield text.slice(0, --endIndex).join('');\n    }\n}\n\nexport function getOverlap(start, [...end]) {\n    return [...start, NaN].findIndex((char, i) => end[i] !== char);\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\nimport React, { useRef, useEffect, memo } from \"react\";\nimport { type, type as loopedType } from \"@camwiegert/typical\";\n\nimport styles from './styles.css'\n\nconst Typical = ({ steps, loop, className, wrapper = \"p\" }) => {\n  const typicalRef = useRef(null);\n  const Component = wrapper;\n  const classNames = [styles.typicalWrapper];\n  \n  if (className) {\n    classNames.unshift(className);\n  }\n\n  useEffect(() => {\n    if (loop === Infinity) {\n      type(typicalRef.current, ...steps, loopedType);\n    } else if (typeof loop === \"number\") {\n      type(\n        typicalRef.current,\n        ...Array(loop)\n          .fill(steps)\n          .flat()\n      );\n    } else {\n      type(typicalRef.current, ...steps);\n    }\n  });\n\n  return <Component ref={typicalRef} className={classNames.join(' ')}/>;\n}\n\nexport default memo(Typical)\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}