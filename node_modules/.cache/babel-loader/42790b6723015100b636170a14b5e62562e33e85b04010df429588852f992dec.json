{"ast":null,"code":"export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","map":{"version":3,"names":["setTranslate","translate","byController","swiper","rtlTranslate","rtl","params","wrapperEl","progress","x","y","z","isHorizontal","roundLengths","Math","floor","cssMode","virtualTranslate","style","transform","previousTranslate","newProgress","translatesDiff","maxTranslate","minTranslate","updateProgress","emit"],"sources":["/Users/shehabwaleed/Development/ReactTraining/mpw1/node_modules/swiper/core/translate/setTranslate.js"],"sourcesContent":["export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}"],"mappings":"AAAA,eAAe,SAASA,YAAY,CAACC,SAAS,EAAEC,YAAY,EAAE;EAC5D,MAAMC,MAAM,GAAG,IAAI;EACnB,MAAM;IACJC,YAAY,EAAEC,GAAG;IACjBC,MAAM;IACNC,SAAS;IACTC;EACF,CAAC,GAAGL,MAAM;EACV,IAAIM,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,MAAMC,CAAC,GAAG,CAAC;EACX,IAAIR,MAAM,CAACS,YAAY,EAAE,EAAE;IACzBH,CAAC,GAAGJ,GAAG,GAAG,CAACJ,SAAS,GAAGA,SAAS;EAClC,CAAC,MAAM;IACLS,CAAC,GAAGT,SAAS;EACf;EACA,IAAIK,MAAM,CAACO,YAAY,EAAE;IACvBJ,CAAC,GAAGK,IAAI,CAACC,KAAK,CAACN,CAAC,CAAC;IACjBC,CAAC,GAAGI,IAAI,CAACC,KAAK,CAACL,CAAC,CAAC;EACnB;EACA,IAAIJ,MAAM,CAACU,OAAO,EAAE;IAClBT,SAAS,CAACJ,MAAM,CAACS,YAAY,EAAE,GAAG,YAAY,GAAG,WAAW,CAAC,GAAGT,MAAM,CAACS,YAAY,EAAE,GAAG,CAACH,CAAC,GAAG,CAACC,CAAC;EACjG,CAAC,MAAM,IAAI,CAACJ,MAAM,CAACW,gBAAgB,EAAE;IACnCV,SAAS,CAACW,KAAK,CAACC,SAAS,GAAI,eAAcV,CAAE,OAAMC,CAAE,OAAMC,CAAE,KAAI;EACnE;EACAR,MAAM,CAACiB,iBAAiB,GAAGjB,MAAM,CAACF,SAAS;EAC3CE,MAAM,CAACF,SAAS,GAAGE,MAAM,CAACS,YAAY,EAAE,GAAGH,CAAC,GAAGC,CAAC;;EAEhD;EACA,IAAIW,WAAW;EACf,MAAMC,cAAc,GAAGnB,MAAM,CAACoB,YAAY,EAAE,GAAGpB,MAAM,CAACqB,YAAY,EAAE;EACpE,IAAIF,cAAc,KAAK,CAAC,EAAE;IACxBD,WAAW,GAAG,CAAC;EACjB,CAAC,MAAM;IACLA,WAAW,GAAG,CAACpB,SAAS,GAAGE,MAAM,CAACqB,YAAY,EAAE,IAAIF,cAAc;EACpE;EACA,IAAID,WAAW,KAAKb,QAAQ,EAAE;IAC5BL,MAAM,CAACsB,cAAc,CAACxB,SAAS,CAAC;EAClC;EACAE,MAAM,CAACuB,IAAI,CAAC,cAAc,EAAEvB,MAAM,CAACF,SAAS,EAAEC,YAAY,CAAC;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}