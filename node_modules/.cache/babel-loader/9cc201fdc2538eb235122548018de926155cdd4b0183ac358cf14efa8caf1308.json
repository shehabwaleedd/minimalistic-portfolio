{"ast":null,"code":"import { elementIndex } from '../../shared/utils.js';\nexport default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = elementIndex(swiper.slides.filter(el => el.getAttribute('data-swiper-slide-index') === '0')[0]);\n    const lastSlideIndex = elementIndex(swiper.slides.filter(el => el.getAttribute('data-swiper-slide-index') * 1 === swiper.slides.length - 1)[0]);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","map":{"version":3,"names":["elementIndex","updateProgress","translate","swiper","multiplier","rtlTranslate","params","translatesDiff","maxTranslate","minTranslate","progress","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","Math","abs","isEndRounded","loop","firstSlideIndex","slides","filter","el","getAttribute","lastSlideIndex","length","firstSlideTranslate","slidesGrid","lastSlideTranslate","translateMax","translateAbs","Object","assign","watchSlidesProgress","centeredSlides","autoHeight","updateSlidesProgress","emit"],"sources":["/Users/shehabwaleed/Development/ReactTraining/mpw1/node_modules/swiper/core/update/updateProgress.js"],"sourcesContent":["import { elementIndex } from '../../shared/utils.js';\nexport default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = elementIndex(swiper.slides.filter(el => el.getAttribute('data-swiper-slide-index') === '0')[0]);\n    const lastSlideIndex = elementIndex(swiper.slides.filter(el => el.getAttribute('data-swiper-slide-index') * 1 === swiper.slides.length - 1)[0]);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}